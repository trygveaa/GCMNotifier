#!/usr/bin/perl

use strict;
use warnings;

use LWP::UserAgent;
use Getopt::Long;
Getopt::Long::Configure('bundling');

my ($type, $subtext, $verbose);

die "Usage: $0 [-t type] [-s subtext] action title body\n"
    unless GetOptions(
    't|type=s'  => \$type,
    's|subtext=s'  => \$subtext,
    'v|verbose' => \$verbose,
    );

my $conf_dir = $ENV{'HOME'} . '/div/gcmnotify/';

open FILE_API_KEY, $conf_dir . 'api_key';
open FILE_DEVICES, $conf_dir . 'devices';
my $api_key = <FILE_API_KEY>;
my @devices = <FILE_DEVICES>;
close FILE_API_KEY;
close FILE_DEVICES;
chomp($api_key);
chomp(@devices);

my $sent = $conf_dir . 'sent';
my $action = $ARGV[0];
my $content;
if (not defined $action) {
    die 'You must specify an action';
} elsif ($action eq 'notify') {
    open FH, '>', $sent;
    close FH;
    $content = '"data": { "action": "notify", "title": "' . $ARGV[1] . '", "body": "' . $ARGV[2] . '"';
    $content .= ', "type": "' . $type . '"' if $type;
    $content .= ', "subtext": "' . $subtext . '"' if $subtext;
    $content .= ' }';
} elsif ($action eq 'cancel') {
    if (-e $sent) {
        unlink($sent);
        $content = '"data": { "action": "cancel" }';
    } else {
        exit;
    }
} elsif ($action eq 'touch') {
    open FH, '>', $sent;
    close FH;
    exit;
} else {
    die 'Not a recognized action';
}

my $req = HTTP::Request->new(POST => 'https://android.googleapis.com/gcm/send');
$req->content_type('application/json');
$req->header('Authorization' => 'key=' . $api_key);
$req->content('{ "registration_ids": ["' . join('", "', @devices) . '"], ' . $content . ' }');

my $ua = LWP::UserAgent->new;
my $res = $ua->request($req);
print $res->as_string if $verbose;
